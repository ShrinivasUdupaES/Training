1. Regular Expression 1

import re

g = ['abc@gmail.com', 'sfsdf@gmail.com', 'sdfsr@hotmail.com', 'sfsg@a.com', 'c@gmail.com']


def email_var():
    for i in g:
        op = re.search(r'([a-z|A-Z]+)([@])([gmail\.com]{9}|[hotmail\.com]{11}|[yahoo\.com]{9}|[outlook\.com]{11})', i)
        if op:
            print(op.group(0))


email_var()

o/p:
abc@gmail.com
sfsdf@gmail.com
sdfsr@hotmail.com
c@gmail.com

-------------------------------------------------

2. Regular Expression 2

import re

g = ['abc@gmail.com', 'sfsdf@gmail.com', 'sdfsr@hotmail.com', 'sfsg@a.com', 'c@gmail.com']


def email_var():
    for i in g:
        op = re.search(r'([a-z|A-Z][a-z|A-Z]+)([@])([gmail\.com]{9}|[hotmail\.com]{11}|[yahoo\.com]{9}|[outlook\.com]{11})', i)
        if op:
            print(op.group(0))


email_var()

o/p:
abc@gmail.com
sfsdf@gmail.com
sdfsr@hotmail.com
-------------------------------------------------

4. Pyramid of * 

def pyr(n):
    s = 2 * n - 2
    for i in range(0, n):
        for j in range(0, s):
            print(end=' ')
        s = s - 1
        for j in range(0, i + 1):
            print(' *', end=' ')
        print('\r')

pyr(5)


-------------------------------------------------

5. Swapcase without builtin function

s = str(input('Enter the string to be swapped: '))

def swping_case():
    s1 = ''
    for i in s:
        if 64 < ord(i) < 91:
            num = ord(i) + 32
            s1 = s1 + chr(num)
        elif 96 < ord(i) < 123:
            num = ord(i) - 32
            s1 = s1 + chr(num)
        else:
            s1 = s1 + i
    print(s1)

swping_case()

-------------------------------------------------

7. sum of vowel's value

d = {'a': 1, 'e': 2, 'i': 3, 'o': 4, 'u': 5}

s = str(input('Enter the string: '))

def count_of_vowel():
    sum1 = 0
    for k, v in d.items():
        for i in s:
            if i == k:
                sum1 = sum1 + d[k]
    print('value of given string: ', sum1)

count_of_vowel()

-------------------------------------------------

9. Check palindrome of a number.

def num_pal(n):
    t = n
    sum1 = 0
    while n > 0:
        a = n % 10
        sum1 = sum1 * 10 + a
        n = n // 10
    if t == sum1:
        return 'Palindrome...'
    else:
        return 'Not a palindrome'


n = int(input('Enter an integer: '))
print(num_pal(n))