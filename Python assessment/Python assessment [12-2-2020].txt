2) identify the empty tuples -> [(), ('a', 'b'), ('', '')]

ll = [(), ('a', 'b'), ('', '')]

def zero_len():
    for i in ll:
        j = tuple(i)
        if len(j) == 0:
            return i

print(zero_len())

-----------------------------------------------------------------

3) Balanced parentheses

open_braces = ['[', '{', '(']
close_braces = [']', '}', ')']


def check_parentheses(sample):
    l1 = []
    for i in sample:
        if i in open_braces:
            l1.append(i)
        elif i in close_braces:
            pos = close_braces.index(i)
            if (len(l1) > 0) and (open_braces[pos] == l1[len(l1) - 1]):
                l1.pop()
            else:
                return False
    if len(l1) == 0:
        return True


sample = str(input('Enter the input string: '))
print(check_parentheses(sample))

-----------------------------------------------------------------

4) 'welcome to python' -> Welcome To Python

import string

s = str(input('Enter a string:'))

ss = string.capwords(s)
s1 = s.title()
print(s1)
print(ss)

-----------------------------------------------------------------

5) Find the ip address using regular expression - 0.0.0.0 to 255.255.255.255

import re

s = input()
x = re.match(r'\b(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]['
               r'0-9]|[0-9]))\b', s)
print(x)

-----------------------------------------------------------------

6) Convert list to string without using '+' / concat.

l = ['Welcome', 'to', 'python']
sep = ' '
print(sep.join(l))

-----------------------------------------------------------------