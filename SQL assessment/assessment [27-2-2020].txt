CREATE TABLE AUTHOR
(
	AUTHOR_ID VARCHAR(6),
	AUTHOR_NAME VARCHAR(30),
	AUTHOR_COUNTRY VARCHAR(15),
	AUTHOR_CITY VARCHAR(15),
	PUBLISH_ID VARCHAR(4)
);

INSERT INTO AUTHOR VALUES
('AUT001','William Norton','UK','Cambridge','PB01'),
('AUT002','C. J. Wilde','USA','San Francisco','PB04'),
('AUT003','John Betjeman Hunter','RUSSIA','Moscow','PB01'),
('AUT004','John Betjeman Hunter','CANADA','Toronto','PB03'),
('AUT005','S.B.Swaminathan','INDIA','Delhi','PB01'),
('AUT006','Butler Andre','UK','London',	'PB03'),
('AUT007','E. Howard', 'EUROPE','Berlin','PB03'),
('AUT008','Andrew Jeff','GERMANY','Berlin','PB02'),
('AUT009','Drek Tailor','Australia','Melbourne','PB01'),
('AUT010','Mary Coffing','USA','New Jersy','PB04');

SELECT * FROM AUTHOR;
+-----------+----------------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+----------------------+----------------+---------------+------------+
| AUT001    | William Norton       | UK             | Cambridge     | PB01       |
| AUT002    | C. J. Wilde          | USA            | San Francisco | PB04       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow        | PB01       |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto       | PB03       |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi         | PB01       |
| AUT006    | Butler Andre         | UK             | London        | PB03       |
| AUT007    | E. Howard            | EUROPE         | Berlin        | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin        | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne     | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy     | PB04       |
+-----------+----------------------+----------------+---------------+------------+

create table publish
(
publish_id varchar(5),
publish_name varchar(30),
publish_city varchar(10),
publish_start_date date,
branches int(3)
);

 SELECT * FROM PUBLISH;
+------------+--------------------------+--------------+--------------------+----------+
| publish_id | publish_name             | publish_city | publish_start_date | branches |
+------------+--------------------------+--------------+--------------------+----------+
| PB01       | Jex Max Publication      | Berlin       | 1929-04-21         |       10 |
| PB02       | Summer Night Publication | Canada       | 2019-08-31         |       25 |
| PB03       | Novel Publisher Ltd.     | London       | 2018-08-10         |       11 |
| PB04       | Mark Book Sales          | New Jersy    | 2008-05-24         |        9 |
+------------+--------------------------+--------------+--------------------+----------+

***************************************************************************************************
1. Fetch publisher information who have publish_city <> author_city and check if publish_city = author_country.
display the correct publisher_city along with other publisher information based on author_city



***************************************************************************************************
2. Fetch authors_name, author_country, publish_city, publish_start_date, branches who have 
publications with most number of branches by century

select a.author_name, a.author_country, p.publish_city, p.publish_start_date, p.branches
from publish p
join author a
on p.publish_id = a.publish_id
where year(p.publish_start_date)>2000
and p.branches = (select max(p.branches) from publish p)

union

select a.author_name, a.author_country, p.publish_city, p.publish_start_date, p.branches
from publish p
join author a
on p.publish_id = a.publish_id
where year(p.publish_start_date)<2000
group by p.publish_start_date; 

+----------------+----------------+--------------+--------------------+----------+
| author_name    | author_country | publish_city | publish_start_date | branches |
+----------------+----------------+--------------+--------------------+----------+
| Andrew Jeff    | GERMANY        | Canada       | 2019-08-31         |       25 |
| William Norton | UK             | Berlin       | 1929-04-21         |       10 |
+----------------+----------------+--------------+--------------------+----------+

***************************************************************************************************
4. Fetch authors who have incorrect author_country for same author_city. Display correct author_country along with all author_information

select *,
case
when author_city = 'Berlin' then 'GERMANY'
else author_country
end authors_country
from author;

+-----------+----------------------+----------------+---------------+------------+-----------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID | authors_country |
+-----------+----------------------+----------------+---------------+------------+-----------------+
| AUT001    | William Norton       | UK             | Cambridge     | PB01       | UK              |
| AUT002    | C. J. Wilde          | USA            | San Francisco | PB04       | USA             |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow        | PB01       | RUSSIA          |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto       | PB03       | CANADA          |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi         | PB01       | INDIA           |
| AUT006    | Butler Andre         | UK             | London        | PB03       | UK              |
| AUT007    | E. Howard            | EUROPE         | Berlin        | PB03       | GERMANY         |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin        | PB02       | GERMANY         |
| AUT009    | Drek Tailor          | Australia      | Melbourne     | PB01       | Australia       |
| AUT010    | Mary Coffing         | USA            | New Jersy     | PB04       | USA             |
+-----------+----------------------+----------------+---------------+------------+-----------------+

***************************************************************************************************

6. Fetch author details if first character of publisher name is same as author_name

select a.*,p.publish_name  from publish p
join author a
on p.publish_id = a.publish_id
where substring(a.author_name, 1, 1)= substring(p.publish_name, 1, 1);

+-----------+----------------------+----------------+-------------+------------+---------------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY | PUBLISH_ID | publish_name        |
+-----------+----------------------+----------------+-------------+------------+---------------------+
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow      | PB01       | Jex Max Publication |
| AUT010    | Mary Coffing         | USA            | New Jersy   | PB04       | Mark Book Sales     |
+-----------+----------------------+----------------+-------------+------------+---------------------+

***************************************************************************************************

7. Fetch author details who have more than one initial before their name

select * from author 
where author_name like'%.%.%';

+-----------+-----------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME     | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+-----------------+----------------+---------------+------------+
| AUT002    | C. J. Wilde     | USA            | San Francisco | PB04       |
| AUT005    | S.B.Swaminathan | INDIA          | Delhi         | PB01       |
+-----------+-----------------+----------------+---------------+------------+

***************************************************************************************************

8. Fetch author details who do not have initial in their name

select * from author 
where author_name not like'%.%.%' and author_name not like'%.%';

+-----------+----------------------+----------------+-------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY | PUBLISH_ID |
+-----------+----------------------+----------------+-------------+------------+
| AUT001    | William Norton       | UK             | Cambridge   | PB01       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow      | PB01       |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto     | PB03       |
| AUT006    | Butler Andre         | UK             | London      | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin      | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne   | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy   | PB04       |
+-----------+----------------------+----------------+-------------+------------+

***************************************************************************************************

9. Fetch author details who have lower case in author_name

select * from author where author_name regexp '[a-z]';

+-----------+----------------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+----------------------+----------------+---------------+------------+
| AUT001    | William Norton       | UK             | Cambridge     | PB01       |
| AUT002    | C. J. Wilde          | USA            | San Francisco | PB04       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow        | PB01       |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto       | PB03       |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi         | PB01       |
| AUT006    | Butler Andre         | UK             | London        | PB03       |
| AUT007    | E. Howard            | EUROPE         | Berlin        | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin        | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne     | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy     | PB04       |
+-----------+----------------------+----------------+---------------+------------+

***************************************************************************************************
10. Fetch author information and publisher information who have publisher with recent publish_start_date.

select a.*,p.* from publish p
join author a
on p.publish_id = a.publish_id
where year(p.publish_start_date) = (select max(year(p.publish_start_date)) from publish p);

+-----------+-------------+----------------+-------------+------------+------------+--------------------------+--------------+--------------------+----------+
| AUTHOR_ID | AUTHOR_NAME | AUTHOR_COUNTRY | AUTHOR_CITY | PUBLISH_ID | publish_id | publish_name             | publish_city | publish_start_date | branches |
+-----------+-------------+----------------+-------------+------------+------------+--------------------------+--------------+--------------------+----------+
| AUT008    | Andrew Jeff | GERMANY        | Berlin      | PB02       | PB02       | Summer Night Publication | Canada       | 2019-08-31         |       25 |
+-----------+-------------+----------------+-------------+------------+------------+--------------------------+--------------+--------------------+----------+

***************************************************************************************************

11. Fetch count of authors belong to same continent(eg. Berlin -> Europe)

select continent, count(continent) as count_of_authors from
(select 
case
when AUTHOR_CITY= 'Cambridge' then  'europe'
when AUTHOR_CITY= 'Berlin' then  'europe'
when AUTHOR_CITY= 'Moscow' then 'europe'
when AUTHOR_CITY= 'London' then 'europe'
when AUTHOR_CITY= 'San Francisco' then 'north america'
when AUTHOR_CITY= 'New Jersy' then 'north america'
when AUTHOR_CITY= 'Toronto' then  'north america'
when AUTHOR_CITY= 'Delhi' then 'asia'
when AUTHOR_CITY= 'Melbourne' then 'aus'
end as continent
from author) as t
group by continent;

+---------------+------------------+
| continent     | count_of_authors |
+---------------+------------------+
| europe        |                5 |
| north america |                3 |
| asia          |                1 |
| aus           |                1 |
+---------------+------------------+

